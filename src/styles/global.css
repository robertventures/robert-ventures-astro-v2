/*
  The CSS in this style tag is based off of Bear Blog's default CSS.
  https://github.com/HermanMartinus/bearblog/blob/297026a877bc2ab2b3bdfbd6b9f7961c350917dd/templates/styles/blog/default.css
  License MIT: https://github.com/HermanMartinus/bearblog/blob/master/LICENSE.md
 */

:root {
	--accent: #2337ff;
	--accent-dark: #000d8a;
	--black: 15, 18, 25;
	--gray: 96, 115, 159;
	--gray-light: 229, 233, 240;
	--gray-dark: 34, 41, 57;
	--gray-gradient: rgba(var(--gray-light), 50%), #fff;
	--box-shadow: 0 2px 6px rgba(var(--gray), 25%), 0 8px 24px rgba(var(--gray), 33%),
		0 16px 32px rgba(var(--gray), 33%);

	--background: #E4E9F0;


}

@font-face {
	font-family: 'Satoshi';
	src: url('/fonts/Satoshi-Bold.otf') format('opentype');
	font-weight: 700;
	font-style: normal;
	font-display: swap;
}
@font-face {
	font-family: 'Satoshi';
	src: url('/fonts/Satoshi-Medium.otf') format('opentype');
	font-weight: 500;
	font-style: normal;
	font-display: swap;
}

@font-face {
	font-family: 'Public Sans';
	src: url('/fonts/PublicSans-Regular.ttf') format('truetype');
	font-weight: 400;
	font-style: normal;
	font-display: swap;
}

body {
	font-family: 'Public Sans', sans-serif;
	margin: 0;
	padding: 0;
	text-align: left;
	background: var(--background);
	background-size: 100% 600px;
	word-wrap: break-word;
	overflow-wrap: break-word;
	color: rgb(var(--gray-dark));
	line-height: 1.7;
}

/* main {
	width: 720px;
	max-width: calc(100% - 2em);
	margin: auto;
	padding: 3em 1em;
} */
h1,
h2,
h3,
h4,
h5,
h6 {
	font-family: 'Satoshi', arial;
	font-weight: bold;
	color: rgb(var(--black));
	line-height: 1.2;
	margin: 0 ;
}

h1 {
	/* font-size: clamp(2.625rem, 1.9464rem + 3.3929vw, 5rem); */
	/* font-size: clamp(3rem, 2.7143rem + 1.4286vw, 4rem); */
	font-size: 3rem;
	line-height: 1.25;

	font-size: 2.5625rem;
}

h2 {
	/* font-size: clamp(1.5rem, 0.8571rem + 3.2143vw, 3.75rem); */
	font-size: clamp(2rem, 1.1489rem + 4.2553vw, 2.25rem);
}

h3 {
	font-size: clamp(1.125rem, 0.6429rem + 2.4107vw, 2.8125rem);
}

h4 {
	font-size: clamp(1rem, 2.5vw + 0.375rem, 2.109375rem);
	font-weight: bold;
}

h5 {
	font-size: clamp(0.75rem, 2vw + 0.25rem, 1.58203125rem);
}

h6 {
	font-size: clamp(0.474609375rem, 1.5vw + 0.125rem, 1.1865234375rem);
}

.alt-color {
	background: linear-gradient(90deg, #281480 0%, #3C1FBF 66.45%);
	background-clip: text;
	-webkit-background-clip: text;
	-webkit-text-fill-color: transparent;
}

strong,
b {
	font-weight: 700;
}

a {
	color: var(--accent);
}

a:hover {
	color: var(--accent);
}

p {
	font-size: 1.125rem;
	line-height: 2;
	margin: 0;
}

.prose p {
	margin-bottom: 2em;
}

textarea {
	width: 100%;
	font-size: 16px;
}

input {
	font-size: 16px;
}

table {
	width: 100%;
}

/* img {
	max-width: 100%;
	height: auto;
} */

code {
	padding: 2px 5px;
	background-color: rgb(var(--gray-light));
	border-radius: 2px;
}

pre {
	padding: 1.5em;
	border-radius: 8px;
}

pre>code {
	all: unset;
}

blockquote {
	border-left: 4px solid var(--accent);
	padding: 0 0 0 20px;
	margin: 0px;
	font-size: 1.333em;
}

hr {
	border: none;
	border-top: 1px solid rgb(var(--gray-light));
}

.sr-only {
	border: 0;
	padding: 0;
	margin: 0;
	position: absolute !important;
	height: 1px;
	width: 1px;
	overflow: hidden;
	/* IE6, IE7 - a 0 height clip, off to the bottom right of the visible 1px box */
	clip: rect(1px 1px 1px 1px);
	/* maybe deprecated but we need to support legacy browsers */
	clip: rect(1px, 1px, 1px, 1px);
	/* modern browsers, clip-path works inwards from each corner */
	clip-path: inset(50%);
	/* added line to stop words getting smushed together (as they go onto separate lines and some screen readers do not understand line feeds as a space */
	white-space: nowrap;
}

.formkit-alert-error{
	display: none;
}



/* RESET RESET RESET RESET RESET RESET RESET  */

/* 1. Use a more-intuitive box-sizing model */
*, *::before, *::after {
	box-sizing: border-box;
  }
  
  /* 2. Remove default margin */
  * {
	margin: 0;
  }
  
  body {
	/* 3. Add accessible line-height */
	line-height: 1.5;
	/* 4. Improve text rendering */
	-webkit-font-smoothing: antialiased;
  }
  
  /* 5. Improve media defaults */
  img, picture, video, canvas, svg {
	display: block;
	max-width: 100%;
  }
  
  /* 6. Inherit fonts for form controls */
  input, button, textarea, select {
	font: inherit;
  }
  
  /* 7. Avoid text overflows */
  p, h1, h2, h3, h4, h5, h6 {
	overflow-wrap: break-word;
  }
  
  /* 8. Improve line wrapping */
  p {
	text-wrap: pretty;
  }
  h1, h2, h3, h4, h5, h6 {
	text-wrap: balance;
  }
  
  /*
	9. Create a root stacking context
  */
  #root, #__next {
	isolation: isolate;
  }

  .hidden {
	display: none;
}